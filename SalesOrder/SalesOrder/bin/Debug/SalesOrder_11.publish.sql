/*
Deployment script for SalesOrder

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "SalesOrder"
:setvar DefaultFilePrefix "SalesOrder"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL14.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL14.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Creating [dbo].[AddProductsToOrder]...';


GO
CREATE PROCEDURE [AddProductsToOrder]
	@OrderNumber SMALLINT,
	@ProductNumber SMALLINT,
	@Quantity SMALLINT,
	@PricePerUnit INT
AS
BEGIN
	INSERT INTO order_details
		(orderNumber, productNumber, quantityOrdered, quotedPrice)
	VALUES
		(@OrderNumber, @ProductNumber, @Quantity, @PricePerUnit)
	SELECT 
		o.orderNumber,
		CONCAT(c.custFirstName,' ',c.custLastName) AS CustFullName,
		c.custPhoneNumber,
		CONCAT(e.empFirstName,' ', e.empLastName) AS EmpFullName,
		o.orderDate,
		o.shipDate,
		p.retailPrice,
		SUM(od.quotedPrice * od.quantityOrdered) AS TotalCost,
		SUM(od.quotedPrice * quantityOrdered) * 0.08 AS Tax,
		SUM(od.quantityOrdered * od.quantityOrdered) * 1.08 AS GrandTotal
	FROM orders o
		INNER JOIN customers c on c.customerID = o.customerID
		INNER JOIN employees e on e.employeeID = o.employeeID
		INNER JOIN order_details od on od.orderNumber = o.orderNumber
		INNER JOIN products p on p.productNumber = od.productNumber
	GROUP BY o.orderNumber
END
GO
PRINT N'Creating [dbo].[FindCustomerByID]...';


GO
CREATE PROCEDURE [FindCustomerByID]
	@CustomerID INT
AS
BEGIN
	SELECT 
		c.customerID,
		c.custFirstName,
		c.custLastName,
		c.custStreetAddress,
		c.custCity,
		c.custState,
		c.custPhoneNumber
	FROM customers c
	WHERE c.customerID = @CustomerID
END
GO
PRINT N'Creating [dbo].[FindCustomerByName]...';


GO
CREATE PROCEDURE [FindCustomerByName]
	@FirstName NVARCHAR(25), @LastName NVARCHAR(25)
AS
BEGIN
	SELECT 
		c.customerID,
		c.custFirstName,
		c.custLastName,
		c.custStreetAddress,
		c.custCity,
		c.custState,
		c.custPhoneNumber
	FROM customers c
	WHERE 
		c.custFirstName = @FirstName 
		AND 
		c.custLastName = @LastName
END
GO
PRINT N'Creating [dbo].[FindOrderByNumber]...';


GO
CREATE PROCEDURE [FindOrderByNumber]
	@OrderNumber SMALLINT
AS
BEGIN
	SELECT 
		o.orderNumber,
		CONCAT(c.custFirstName, ' ', c.custLastName) AS CustomerFullName,
		CONCAT(c.custAreaCode, ' ', c.custPhoneNumber) AS CustomerphoneNumber,
		CONCAT(e.empFirstName, ' ', empLastName) AS EmployeeLastName,
		CAST(o.orderDate AS DATE) AS OrderDate,
		CAST(o.shipDate AS DATE) AS ShipDate,
		SUM(od.quantityOrdered * od.quotedPrice) as TotalCost,
		SUM(od.quantityOrdered * od.quotedPrice) * .08 AS Tax,
		SUM(od.quantityOrdered * od.quotedPrice) * 1.08 AS GrandTotal
	FROM orders o 
		INNER JOIN customers c ON c.customerID = o.customerID
		INNER JOIN employees e ON e.employeeID = o.employeeID
		INNER JOIN order_details od ON od.orderNumber = o.orderNumber
	WHERE o.orderNumber = @OrderNumber
END
GO
PRINT N'Creating [dbo].[RemoveProductFromOrder]...';


GO
CREATE PROCEDURE [dbo].[RemoveProductFromOrder]
	@OrderNumber SMALLINT,
	@ProductNumber SMALLINT
AS
BEGIN
	DELETE FROM order_details
	WHERE 
		orderNumber = @OrderNumber AND 
		productNumber = @ProductNumber
	SELECT o.orderNumber,
		CONCAT(c.custFirstName,' ',c.custLastName) AS CustFullName,
		c.custPhoneNumber,
		CONCAT(e.empFirstName,' ', e.empLastName) AS EmpFullName,
		CAST(o.orderDate AS DATE),
		CAST(o.shipDate AS DATE),
		p.retailPrice,
		SUM(od.quotedPrice * od.quantityOrdered) AS TotalCost,
		SUM(od.quotedPrice * quantityOrdered) * 0.08 AS Tax,
		SUM(od.quantityOrdered * od.quantityOrdered) * 1.08 AS GrandTotal
	FROM orders o
		INNER JOIN customers c on c.customerID = o.customerID
		INNER JOIN employees e on e.employeeID = o.employeeID
		INNER JOIN order_details od on od.orderNumber = o.orderNumber
		INNER JOIN products p on p.productNumber = od.productNumber
	GROUP BY o.orderNumber
END
GO
PRINT N'Creating [dbo].[SetCustomerAddress]...';


GO
CREATE PROCEDURE [SetCustomerAddress]
	@CustomerId SMALLINT,
	@StreetAddress NVARCHAR(50),
	@City NVARCHAR(30),
	@State NVARCHAR(2),
	@ZipCode NVARCHAR(10)
AS
BEGIN
	UPDATE customers
	SET 
	custStreetAddress = @StreetAddress,
	custCity = @City,
	custState = @State,
	custZipCode = @ZipCode
	WHERE customerID = @CustomerId

	SELECT * FROM customers WHERE customerID = SCOPE_IDENTITY();
END
GO
PRINT N'Creating [dbo].[SetCustomerPhoneNumber]...';


GO
CREATE PROCEDURE [SetCustomerPhoneNumber]
	@CustomerId SMALLINT,
	@AreaCode SMALLINT,
	@PhoneNumber NVARCHAR(8)
AS
BEGIN
	UPDATE customers
	SET 
	custAreaCode = @AreaCode,
	custPhoneNumber = @PhoneNumber
	WHERE customerID = @CustomerId

	SELECT * FROM customers WHERE customerID = SCOPE_IDENTITY();
END
GO
PRINT N'Creating [dbo].[ShipOrder]...';


GO
CREATE PROCEDURE [ShipOrder]
	@OrderNumber SMALLINT,
	@ShipDate DATE
AS
BEGIN
	UPDATE orders 
	SET shipDate = @ShipDate;

	SELECT 
		o.orderNumber,
		CONCAT(c.custFirstName, ' ', c.custLastName) AS custfullName,
		CONCAT(c.custAreaCode,'-', c.custPhoneNumber) AS custPhoneNumber,
		CONCAT(e.empFirstName,' ', e.empLastName) AS empFullName,
		CAST(o.orderDate AS DATE),
		CAST(o.shipDate AS DATE),
		CAST(SUM(od.quantityOrdered * od.quotedPrice) AS DECIMAL(10,2)) AS TotalCost,
		CAST(SUM(od.quantityOrdered * od.quotedPrice) * 0.08 AS DECIMAL(10,2)) AS Tax,
		CAST(SUM(od.quantityOrdered * od.quotedPrice) * 1.08 AS DECIMAL) AS GrandTotal
	FROM orders o
		INNER JOIN customers c on c.customerID = o.customerID
		INNER JOIN employees e on e.employeeID = o.employeeID
		INNER JOIN order_details od on od.orderNumber = o.orderNumber
	GROUP BY o.shipDate
END
GO
PRINT N'Creating [dbo].[ShowOrderDetails]...';


GO
CREATE PROCEDURE [ShowOrderDetails]
	@OrderNumber SMALLINT
AS
BEGIN
	SELECT
		od.orderNumber,
		cs.categoryDescription,
		od.productNumber,
		p.productName,
		od.quantityOrdered,
		od.quotedPrice
	FROM order_details od
		INNER JOIN products p on p.productNumber = od.productNumber
		INNER JOIN categories cs on cs.categoryID = p.categoryID
	WHERE od.orderNumber = @OrderNumber
END
GO
PRINT N'Update complete.';


GO
